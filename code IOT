import cv2
import numpy as np
import matplotlib.pyplot as plt

# 1. Đọc ảnh đầu vào
src = cv2.imread("C:\\Users\\Admin\\Pictures\\Screenshots\\dongxu.jpg")
if src is None:
    print("Error: Could not read the image file.")
    exit()

cv2.imshow("Original Image", src)

# 2. Chuyển ảnh sang ảnh xám
gray = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)

# Tăng cường độ tương phản ảnh xám
gray_equalized = cv2.equalizeHist(gray)
cv2.imshow("Enhanced Gray Image", gray_equalized)

# 3. Tạo ảnh nhị phân từ ảnh xám
_, bw = cv2.threshold(gray_equalized, 40, 255, cv2.THRESH_BINARY)

# Làm sạch ảnh nhị phân bằng Morphology (loại bỏ nhiễu)
kernel = np.ones((3, 3), np.uint8)
bw_clean = cv2.morphologyEx(bw, cv2.MORPH_OPEN, kernel, iterations=2)
cv2.imshow("Cleaned Binary Image", bw_clean)

# 4. Áp dụng Distance Transform
dist = cv2.distanceTransform(bw_clean, cv2.DIST_L2, 5)
cv2.normalize(dist, dist, 0, 1.0, cv2.NORM_MINMAX)
cv2.imshow("Distance Transform", dist)

# 5. Ngưỡng hóa ảnh Distance Transform để tìm vùng tiền cảnh
_, dist_thresh = cv2.threshold(dist, 0.5, 1.0, cv2.THRESH_BINARY)
cv2.imshow("Thresholded Distance Transform", dist_thresh)

# 6. Chuyển ảnh Distance Transform thành kiểu CV_8U để tìm Contours
dist_8u = cv2.convertScaleAbs(dist_thresh)

# 7. Tìm các đường viền (Contours) để tạo các markers
contours, _ = cv2.findContours(dist_8u, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
ncomp = len(contours)
print("Number of coins detected:", ncomp)

# 8. Tạo markers cho thuật toán Watershed
markers = np.zeros_like(dist_8u, dtype=np.int32)

# Vẽ các markers từ contours
for i in range(ncomp):
    cv2.drawContours(markers, contours, i, i + 1, -1)

# Tạo marker cho nền (background)
cv2.circle(markers, (5, 5), 3, 255, -1)

# 9. Áp dụng thuật toán Watershed
cv2.watershed(src, markers)

# 10. Tạo ảnh kết quả
result = src.copy()

# Tô ranh giới của Watershed bằng màu đỏ
result[markers == -1] = [0, 0, 255]
cv2.imshow("Watershed Boundaries", result)

# 11. Tô màu ngẫu nhiên cho từng vùng tiền cảnh
colors = [tuple(np.random.randint(0, 256, 3).tolist()) for _ in range(ncomp)]

# Tạo ảnh phân đoạn kết quả
segmented_image = np.zeros_like(src)
for i in range(markers.shape[0]):
    for j in range(markers.shape[1]):
        index = markers[i, j]
        if 0 < index <= ncomp:
            segmented_image[i, j] = colors[index - 1]


cv2.waitKey(0)
cv2.destroyAllWindows()
